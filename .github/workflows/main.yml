# .github/workflows/main.yml
name: Django-app workflow

on: [push]

jobs:
  tests:
    # "runner" - creating isolated environment with the latest Ubuntu version
    runs-on: ubuntu-latest

    steps:
    # running actions checkout - ready script
    # for repository cloning
    - uses: actions/checkout@v2
    - name: Set up Python
      # running actions setup-python  -  ready script
      # for repository cloning
      uses: actions/setup-python@v2
      with:
        # Selecting Python version
        python-version: 3.7

    - name: Install dependencies
      run: |
        # updating pip
        python -m pip install --upgrade pip
        # installing flake8 and its plugins
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # installing dependencies
        pip install -r requirements.txt

    - name: Test with flake8 and django tests
      run: |
        # running tests of the project according to flake8
        python -m flake8
        # change dir to folder with manage.py
        #<intra_actions_root_folder>/<project_folder>/manage.py
        cd infra_project/
        python manage.py test

  # build and send application image to DockerHub
  build_and_push_to_docker_hub:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests   # do not run immediately, wait for tests to complete
    steps:
    - name: Check out the repository
      # checking Docker Hub repository availability for workflow
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      # Calling docker builder
      uses: docker/setup-buildx-action@v1
    - name: Login to Docker
      # Running authorization script on Docker Hub
      uses: docker/lgin-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to Docker Hub
      # Pushing image to Docker Hub
      uses: docker/build-push-actions@v2
      with:
        push: true
        tags: alexgunn/my_practice_repo:latest
  # deploying to production server
  #deploy:
  #  runs-on: ubuntu-latest
  #  needs: build_and_push_to_docker_hub
  #  steps:
  #  - name: executing remote ssh commands to deploy
  #    uses: appleboy/ssh-action@master
  #    with:
  #      host: ${{ secrets.HOST }}    # must be created in GitHub secrets
  #      username: ${{ secrets.USER }}
  #      key: ${{ secrets.SSH_KEY }}    # private key of the production server
  #      passphrase: $ {{ secrets.PASSPHRASE }}  # if ssh-key is password-protected
  #      script: |
  #        # pulls image from Docker Hub
  #        sudo docker pull alexgunn/my_practice_repo
  #        # stopping all containers
  #        sudo docker stop $(sudo docker ps -a -q)
  #        sudo docker run --rm -d -p 5000:5000 alexgunn/my_practice_repo
